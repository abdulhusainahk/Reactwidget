{"ast":null,"code":"var _jsxFileName = \"/home/abdul/react/Reactwidget/src/component/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdowm = ({\n  options,\n  selected,\n  onSelectChange,\n  Title\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    const onBodyClick = event => {\n      if (ref.current && ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    document.body.addEventListener('click', onBodyClick, {\n      capture: true\n    });\n    return () => {\n      document.body.removeEventListener('click', onBodyClick);\n    };\n  }, []);\n  const renderedOption = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        onSelectChange(option);\n      },\n      className: \"item\",\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"ui form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setOpen(!open);\n        },\n        className: `ui selection dropdown ${open ? `visible active` : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: selected.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `menu ${open ? 'visible transition' : ''}`,\n          children: renderedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropdowm, \"t4ZsC+YUoO3/Ij2kmAXjjTymoXI=\");\n\n_c = Dropdowm;\nexport default Dropdowm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdowm\");","map":{"version":3,"sources":["/home/abdul/react/Reactwidget/src/component/Dropdown.js"],"names":["React","useState","useEffect","useRef","Dropdowm","options","selected","onSelectChange","Title","open","setOpen","ref","onBodyClick","event","current","contains","target","document","body","addEventListener","capture","removeEventListener","renderedOption","map","option","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,MAAjC,QAA8C,OAA9C;;;AAEA,MAAMC,QAAQ,GAAC,CAAC;AAACC,EAAAA,OAAD;AAASC,EAAAA,QAAT;AAAkBC,EAAAA,cAAlB;AAAiCC,EAAAA;AAAjC,CAAD,KAA2C;AAAA;;AACtD,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeT,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAMU,GAAG,GAAGR,MAAM,EAAlB;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMU,WAAW,GAAEC,KAAD,IAAS;AACvB,UAAGF,GAAG,CAACG,OAAJ,IAAeH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAAlB,EAAqD;AACjD;AACH;;AACDN,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KALD;;AAMAO,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAuCP,WAAvC,EAAmD;AAACQ,MAAAA,OAAO,EAAE;AAAV,KAAnD;AACA,WAAM,MAAI;AACNH,MAAAA,QAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,OAAlC,EAA0CT,WAA1C;AACH,KAFD;AAGH,GAXQ,EAWP,EAXO,CAAT;AAYA,QAAMU,cAAc,GAACjB,OAAO,CAACkB,GAAR,CAAaC,MAAD,IAAU;AACvC,QAAGA,MAAM,CAACC,KAAP,KAAenB,QAAQ,CAACmB,KAA3B,EAAiC;AAC7B,aAAO,IAAP;AACH;;AACD,wBACI;AACA,MAAA,OAAO,EAAE,MAAI;AAAClB,QAAAA,cAAc,CAACiB,MAAD,CAAd;AAAuB,OADrC;AAGA,MAAA,SAAS,EAAC,MAHV;AAAA,gBAIKA,MAAM,CAACE;AAJZ,OAEKF,MAAM,CAACC,KAFZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GAZoB,CAArB;AAaA,sBACA;AAAK,IAAA,GAAG,EAAEd,GAAV;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,kBAA0BH;AAA1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,OAAO,EAAE,MAAI;AAACE,UAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AAAe,SAAlC;AACA,QAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAmB,EAAG,EAD9D;AAAA,gCAEI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBH,QAAQ,CAACoB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,SAAS,EAAG,QAAOjB,IAAI,GAAE,oBAAF,GAAuB,EAAG,EAAtD;AAAA,oBACKa;AADL;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAcH,CA1CD;;GAAMlB,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import React,{useState,useEffect,useRef} from 'react';\n\nconst Dropdowm=({options,selected,onSelectChange,Title})=>{\n    const [open,setOpen]=useState(false);\n    const ref = useRef();\n    useEffect(()=>{\n        const onBodyClick=(event)=>{\n            if(ref.current && ref.current.contains(event.target)){\n                return;\n            }\n            setOpen(false);\n        };\n        document.body.addEventListener('click',onBodyClick,{capture: true});\n        return()=>{\n            document.body.removeEventListener('click',onBodyClick);\n        };\n    },[]);\n    const renderedOption=options.map((option)=>{\n        if(option.value===selected.value){\n            return null;\n        }\n        return(\n            <div \n            onClick={()=>{onSelectChange(option)}} \n            key={option.value} \n            className=\"item\">\n                {option.label}\n            </div>\n        );\n    })\n    return(\n    <div ref={ref} className=\"ui form\">\n        <div className=\"field\">\n            <label className=\"label\">{Title}</label>\n            <div onClick={()=>{setOpen(!open)}} \n            className={`ui selection dropdown ${open ?`visible active`:''}`}>\n                <i className=\"dropdown icon\"></i>\n                <div className=\"text\">{selected.label}</div>\n                <div className={`menu ${open ?'visible transition':''}`}>\n                    {renderedOption}\n                </div>\n            </div>\n        </div>\n    </div>);\n}\n\nexport default Dropdowm;"]},"metadata":{},"sourceType":"module"}